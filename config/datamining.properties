# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Job
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=datamining

# YARN
yarn.package.path=file://${basedir}/target/rb-samza-moa-1.0.0-SNAPSHOT-dist.tar.gz

# Task
task.class=net.redborder.samza.tasks.AnomalyDetectionTask
# The job consumes a topic called "testMOA" from the "kafka" system
task.inputs=kafka.testMOA, kafka.testMOA2, kafka.testMOA3, kafka.confMOA

#task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
#task.checkpoint.system=kafka
# Normally, this would be 3, but we have only one broker.
#task.checkpoint.replication.factor=1

# Window task's interval
#task.window.ms=300000

# Serializer/Deserializer
#serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory

# Kafka
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=string
systems.kafka.streams.testMOA.samza.msg.serde=string
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.producer.bootstrap.servers=localhost:9092
systems.kafka.producer.producer.type=sync
# Normally, we'd set this much higher, but we want things to look snappy in the demo.
systems.kafka.producer.batch.num.messages=1

# Remote debug
#task.opts=-agentlib:jdwp=transport=dt_socket,address=9009,server=y,suspend=n

# Use the "json" serializer for messages in the "PageViewEvent" topic
#systems.kafka.streams.PageViewEvent.samza.msg.serde=json

# Store
#stores.meta-counter.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
#stores.meta-counter.changelog=kafka.meta-counter-changelog
#stores.meta-counter.key.serde=string
#stores.meta-counter.msg.serde=string
#stores.meta-counter.write.batch.size=500
#stores.meta-counter.object.cache.size=1000
